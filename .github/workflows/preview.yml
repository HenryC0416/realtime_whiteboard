name: Preview Deployment

on:
  pull_request:
    branches: [ main, develop ]
  

env:
  NODE_VERSION: '18'
  Emscripten_VERSION: '3.1.45'

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v13
      with:
        version: ${{ env.Emscripten_VERSION }}
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Build frontend
      working-directory: ./frontend
      env:
        VITE_API_URL:
        VITE_ENVIRONMENT: preview
      run: npm run build
      
    - name: Build WebAssembly backend
      working-directory: ./backend
      run: |
        source $EMSDK/emsdk_env.sh
        ./scripts/build_wasm.sh
        
    - name: Deploy to preview environment
      run: |
        # Deploy to a preview URL (e.g., Netlify, Vercel, or custom preview server)
        echo "Deploying preview for PR #${{ github.event.number }}"
        # Add your preview deployment logic
        
    - name: Comment PR with preview URL
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = `https://preview-${{ github.event.number }}.your-domain.com`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ï¿½ï¿½ **Preview deployed successfully!**\n\nðŸ”— **Preview URL:** ${previewUrl}\n\nThis preview will be available until the PR is closed.`
          });

  cleanup-preview:
    name: Cleanup Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    
    steps:
    - name: Cleanup preview environment
      run: |
        echo "Cleaning up preview for PR #${{ github.event.number }}"
        # Add cleanup logic for preview environments