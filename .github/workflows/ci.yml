name: Continuous Integration

on:
  push:
    branches: [ main, test1-ci ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Add this for manual triggering


permissions:
  security-events: write  # Required for SARIF upload
  actions: read
  contents: read

env:
  NODE_VERSION: '20.19.0'
  Emscripten_VERSION: '3.1.45'


jobs:
  #frontend CI
  frontend-ci:
    name: Frontend - Lint, Test & Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ./package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run lint
      working-directory: ./frontend
      run: npm run lint
    
    - name: Type checking
      working-directory: ./frontend
      run: npx tsc --noEmit
    
    - name: Check Prettier formatting
      working-directory: ./frontend
      run: npm run format:check
    
    - name: Run unit tests
      working-directory: ./frontend
      run: npm test

    - name: Build for production
      working-directory: ./frontend
      run: npm run build
      
    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist/
        retention-days: 7
    
    

# Backend CI
  backend-ci:
    name: Backend - WebAssembly Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v13
      with:
        version: ${{ env.Emscripten_VERSION }}
        
    - name: Build WebAssembly
      working-directory: ./backend
      run: |
        source $EMSDK/emsdk_env.sh
        echo "Current directory: $(pwd)"
        echo "Script exists: $(ls -la ./scripts/build_wasm.sh)"
        chmod +x ./scripts/build_wasm.sh
        echo "Script permissions after chmod: $(ls -la ./scripts/build_wasm.sh)"
        mkdir -p build/
        echo "Running build script..."
        ./scripts/build_wasm.sh
        
    - name: Upload WASM artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wasm-build
        path: |
          backend/build/
          frontend/public/drawing_engine.*
        retention-days: 7

# Integration Tests
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend-ci, backend-ci]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download frontend artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist/
        
    - name: Download WASM artifacts
      uses: actions/download-artifact@v4
      with:
        name: wasm-build
        path: ./
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run integration tests
      working-directory: ./frontend
      run: |
        # Add your integration test commands here
        echo "Running integration tests..."
        # npm run test:integration

# Security Scan
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'    